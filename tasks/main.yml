- name: Add grafana repository key
  become: true
  ansible.builtin.get_url:
    url: https://apt.grafana.com/gpg.key
    dest: /etc/apt/keyrings/grafana.asc
    checksum: "sha256: 3d4029689bc7e4444ec00abafa07f21e9c812b41f1123ab5bbe6f8c3e3f7ff8c"
    mode: "0644"

- name: Add grafana repository
  ansible.builtin.apt_repository:
    repo: 'deb [signed-by=/etc/apt/keyrings/grafana.asc] https://apt.grafana.com stable main'
    state: present
  register: repochanged

- name: Ensure /etc/grafana-agent exists
  become: true
  ansible.builtin.file:
    dest: /etc/grafana-agent
    state: directory
    mode: "0770"

- name: Install Grafana Agent
  become: true
  ansible.builtin.apt:
    state: present
    update_cache: true
    cache_valid_time: 1800
    name:
      - grafana-agent

- name: Install node exporter plugins
  when: grafana_agent_enable_nodeexporter
  become: true
  ansible.builtin.apt:
    state: present
    update_cache: true
    cache_valid_time: 1800
    name:
      - prometheus-node-exporter-collectors
      - jq

- name: Disable the standalone node exporter
  when: grafana_agent_enable_nodeexporter
  become: true
  ansible.builtin.systemd:
    name: prometheus-node-exporter
    state: stopped
    enabled: false
    masked: true

- name: Merge vars from host_vars and all group_vars the host is in
  merge_vars:
    suffix_to_merge: "{{ item.suffix }}"
    merged_var_name: "grafana_agent_{{ item.name }}_merged"
    expected_type: 'list'
  loop:
    - name: "prometheus_scrapes"
      suffix: "_prometheus_scrapes__to_merge"
    - name: "logs_scrapes"
      suffix: "_logs_scrapes__to_merge"
    - name: "blackbox_targets"
      suffix: "_blackbox_targets__to_merge"

- name: Configure Grafana Agent (environment)
  become: true
  ansible.builtin.template:
    src: grafana-agent-env.j2
    dest: /etc/default/grafana-agent
    owner: root
    group: root
    mode: "0644"
  notify: Restart grafana-agent

- name: Configure Grafana Agent (main config)
  become: true
  ansible.builtin.template:
    src: grafana-agent.yaml.j2
    dest: /etc/grafana-agent/config.yaml
    owner: grafana-agent
    group: grafana-agent
    mode: "0660"
  notify: Restart grafana-agent

- name: Remove standalone prometheus node exporter config
  when: grafana_agent_enable_nodeexporter
  become: true
  ansible.builtin.file:
    path: /etc/default/prometheus-node-exporter
    state: absent

- name: Configure prometheus node exporter add-in (apt)
  when: grafana_agent_enable_nodeexporter
  become: true
  ansible.builtin.service:
    name: prometheus-node-exporter-apt.timer
    state: "{{ 'started' if grafana_agent_enable_nodeexporter_apt else 'stopped' }}"
    enabled: "{{ grafana_agent_enable_nodeexporter_apt }}"

- name: Clean old node exporter add-in file (apt)
  when: grafana_agent_enable_nodeexporter and not grafana_agent_enable_nodeexporter_apt
  become: true
  ansible.builtin.file:
    path: /var/lib/prometheus/node-exporter/apt.prom
    state: absent

- name: Configure prometheus node exporter add-in (ipmi)
  when: grafana_agent_enable_nodeexporter
  become: true
  ansible.builtin.service:
    name: prometheus-node-exporter-ipmitool-sensor.timer
    state: "{{ 'started' if grafana_agent_enable_nodeexporter_ipmi else 'stopped' }}"
    enabled: "{{ grafana_agent_enable_nodeexporter_ipmi }}"

- name: Clean old node exporter add-in file (ipmi)
  when: grafana_agent_enable_nodeexporter and not grafana_agent_enable_nodeexporter_ipmi
  become: true
  ansible.builtin.file:
    path: /var/lib/prometheus/node-exporter/ipmitool_sensor.prom
    state: absent

- name: Configure prometheus node exporter add-in (nvme)
  when: grafana_agent_enable_nodeexporter
  become: true
  ansible.builtin.service:
    name: prometheus-node-exporter-nvme.timer
    state: "{{ 'started' if grafana_agent_enable_nodeexporter_nvme else 'stopped' }}"
    enabled: "{{ grafana_agent_enable_nodeexporter_nvme }}"

- name: Clean old node exporter add-in file (nvme)
  when: grafana_agent_enable_nodeexporter and not grafana_agent_enable_nodeexporter_nvme
  become: true
  ansible.builtin.file:
    path: /var/lib/prometheus/node-exporter/nvme.prom
    state: absent

- name: Configure prometheus node exporter add-in (smart)
  when: grafana_agent_enable_nodeexporter
  become: true
  ansible.builtin.service:
    name: prometheus-node-exporter-smartmon.timer
    state: "{{ 'started' if grafana_agent_enable_nodeexporter_smart else 'stopped' }}"
    enabled: "{{ grafana_agent_enable_nodeexporter_smart }}"

- name: Clean old node exporter add-in file (smart)
  when: grafana_agent_enable_nodeexporter and not grafana_agent_enable_nodeexporter_smart
  become: true
  ansible.builtin.file:
    path: /var/lib/prometheus/node-exporter/smartmon.prom
    state: absent

- name: Configure prometheus node exporter add-in (mellanox HCA temperature)
  when: grafana_agent_enable_nodeexporter
  become: true
  ansible.builtin.service:
    name: prometheus-node-exporter-mellanox-hca-temp.timer
    state: "{{ 'started' if grafana_agent_enable_nodeexporter_mlx_hca_temp else 'stopped' }}"
    enabled: "{{ grafana_agent_enable_nodeexporter_mlx_hca_temp }}"

- name: Clean old node exporter add-in file (mellanox HCA temperature)
  when: grafana_agent_enable_nodeexporter and not grafana_agent_enable_nodeexporter_mlx_hca_temp
  become: true
  ansible.builtin.file:
    path: /var/lib/prometheus/node-exporter/mellanox_hca_temp.prom
    state: absent

- name: Cleanup config folder permissions
  become: true
  changed_when: false
  ansible.builtin.file:
    path: /etc/grafana-agent
    owner: grafana-agent
    group: grafana-agent
    mode: "0770"
